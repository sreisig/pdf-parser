import PyPDF2
import os
import re
import webbrowser

class FileRenamer():
    def __init__(self, input_dir, accept_dir, reject_dir):
        '''
        input_dir: directory with files to be renamed
        accept_dir: directory to put renamed files
        reject_dir: directory to put files where autogenerated names were rejected
        '''

        self.input_dir = input_dir
        self.accept_dir = accept_dir
        self.reject_dir = reject_dir

    def generate_filename(self, pageObj):
        pageText = pageObj.extractText().splitlines()
        for i in range(len(pageText)):
            if "Account Number: " in pageText[i]:
                if bool(re.search("[a-z]+Account Number: [0-9]+$", pageText[i])):
                    acc_name = pageText[i]
                    acc_name = re.sub("Account Number: [0-9]+$", '', acc_name)
                else:
                    acc_name = pageText[i-1]
                    acc_num = pageText[i]
                    # print("%i:  %s" % (i-1, acc_name))
                    # print("%i:  %s" % (i, acc_num))
                acc_name = re.sub("^[0-9]+%?", '', acc_name)
                acc_name = re.sub("^\$-?[0-9,]*", '', acc_name)
                acc_name = acc_name.replace(' ', '_') + '.pdf'
                return acc_name
        return None

    def validate_filename(self, new_fname, filepath):
        # webbrowser.open(filepath)
        print("\n %s \n" % new_fname)
        accept_fname = self.get_bool_user_in()
        if accept_fname:
            self.accept_filename(filepath, new_fname)
        else:
            self.reject_filename(filepath)
        print("======================================")

    @staticmethod
    def get_bool_user_in():
        while(True):
            accept_name = input("Is this the correct filename? ([y]/n): ")
            if accept_name == "y" or accept_name == "Y":
                return True
            elif accept_name == "n" or accept_name == "N":
                return False
            else:
                print("Please enter 'y' or 'n'.")

    def reject_filename(self, filepath):
        curr_fname = os.path.basename(filepath)
        reject_filepath = os.path.join(self.reject_dir, curr_fname)
        os.rename(filepath, reject_filepath)
        return

    def accept_filename(self, curr_filepath, new_filename):
        accept_filepath = os.path.join(self.accept_dir, new_filename)
        os.rename(curr_filepath, accept_filepath)
        return

    def generate_duplicate_filename(self, base_filename, iteration):
        count = "({})".format(iteration)
        new_fname = "{}{}{}".format(base_filename[:-4], count, base_filename[-4:])
        return new_fname


    def handle_duplicate_fname(self, base_possible_fname):
        '''
        Checks if generated fname is a duplicate and handles if necessary
        '''
        # check if filename has been created already, generate possible duplicate filenames
        # until find one that hasn't been used yet
        path_to_file = os.path.join(self.accept_dir, base_possible_fname)
        i = 1
        duplicate_fname = None
        while (os.path.isfile(path_to_file)):
            duplicate_fname = self.generate_duplicate_filename(base_possible_fname, i)
            path_to_file = os.path.join(self.accept_dir, duplicate_fname)
            i += 1
        # if had to generate a duplicate fname, assign that to fname getting validated
        if duplicate_fname is not None:
            new_possible_fname = duplicate_fname
        else:
            new_possible_fname = base_possible_fname
        return new_possible_fname

    def check_dirs_exist(self):
        for d in [self.reject_dir, self.accept_dir, self.input_dir]:
            if not os.path.isdir(d):
                exit("Directory '{}' does not exist. Stopping execution.".format(d))

    def process_dir(self):
        # for each file that needs to be renamed
        for filename in os.listdir(self.input_dir):
            if filename.endswith('.pdf'):
                filepath = os.path.join(self.input_dir, filename)

                # parse .pdffile
                fileObj = open((filepath), 'rb')
                pdfReader = PyPDF2.PdfFileReader(fileObj)
                pageObj = pdfReader.getPage(0)

                # generate possible filename
                base_possible_fname = self.generate_filename(pageObj)

                
                fileObj.close()
                
                if base_possible_fname is not None:
                    new_possible_fname = self.handle_duplicate_fname(base_possible_fname)
                    self.validate_filename(new_possible_fname, filepath)
                else:
                    self.reject_filename(filepath)
        return

if __name__ == "__main__":
    fr = FileRenamer('./input_data/', './renamed_pdfs/', './rejected_pdfs/')
    fr.check_dirs_exist()
    fr.process_dir()
    print("No more .pdf files in '{}'. Execution complete.".format(fr.input_dir))